{"version":3,"sources":["components/QtyCounter/QtyCounter.js","components/FieldSection/FieldSection.js","components/NavigationProgress/NavigationProgress.js","components/BookingStepForm/BookingStepForm.js","App.js","serviceWorker.js","index.js"],"names":["QtyCounter","props","stateKey","value","handleChangeField","Row","Col","className","Button","variant","size","onClick","e","icon","faMinus","faPlus","FieldSection","children","NavigationProgress","Container","fluid","xs","span","offset","ProgressBar","now","faLongArrowAltUp","faLongArrowAltDown","BookingStepForm","state","sizeUnder31InchQty","size31To60InchQty","size60To80InchQty","helpLiftTV","over80InchQty","fixedQty","tiltQty","fullMotionQty","ownBracket","tvBeMounted","currentTVNeedsDismount","externalCordConcealmentQty","inWallCordConcealmentWithPowerQty","installSoundNarQty","setState","faLongArrowAltRight","this","Component","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.536a1249.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Row, Col } from \"react-bootstrap\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./styles.css\";\r\n\r\nfunction QtyCounter(props) {\r\n  const { stateKey, value, handleChangeField } = props;\r\n  return (\r\n    <Row>\r\n      <Col className=\"px-2\">\r\n        <Button\r\n          className=\"btn-circular\"\r\n          variant=\"outline-secondary\"\r\n          size=\"sm\"\r\n          onClick={e => {\r\n            const newValue = value - 1 >= 0 ? value - 1 : value;\r\n            handleChangeField(stateKey, newValue);\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faMinus} />\r\n        </Button>\r\n      </Col>\r\n      <Col className=\"px-2\">\r\n        <span className=\"qty-number\">{value}</span>\r\n      </Col>\r\n      <Col className=\"px-2\">\r\n        <Button\r\n          className=\"btn-circular\"\r\n          variant=\"outline-primary\"\r\n          size=\"sm\"\r\n          onClick={e => {\r\n            const newValue = value + 1;\r\n            handleChangeField(stateKey, newValue);\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nQtyCounter.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  handleChange: PropTypes.func\r\n};\r\n\r\nexport default QtyCounter;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Container } from \"react-bootstrap\";\r\nexport default function FieldSection(props) {\r\n  return <div className=\"field-section p-4 my-4\">{props.children}</div>;\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col, Button, ProgressBar } from \"react-bootstrap\";\r\nimport {\r\n  faLongArrowAltUp,\r\n  faLongArrowAltDown\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport \"./styles.css\";\r\nexport default function NavigationProgress() {\r\n  return (\r\n    <Container fluid className=\"navigation-progress p-4\">\r\n      <Row>\r\n        <Col xs={{ span: 10, offset: 1 }}>\r\n          <Row>\r\n            <Col>\r\n              <div>60% completed</div>\r\n              <ProgressBar now={60} />\r\n            </Col>\r\n            <Col>\r\n              <div className=\"d-flex justify-content-end\">\r\n                <Button>\r\n                  <FontAwesomeIcon icon={faLongArrowAltUp} />\r\n                </Button>\r\n                <span className=\"px-1\"></span>\r\n                <Button>\r\n                  <FontAwesomeIcon icon={faLongArrowAltDown} />\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport _ from \"lodash\";\r\nimport { faLongArrowAltRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport QtyCounter from \"../QtyCounter/QtyCounter\";\r\nimport FieldSection from \"../FieldSection/FieldSection\";\r\nimport NavigationProgress from \"../NavigationProgress/NavigationProgress\";\r\nexport default class BookingStepForm extends Component {\r\n  state = {\r\n    // step1:\r\n    sizeUnder31InchQty: 0,\r\n    size31To60InchQty: 0,\r\n    size60To80InchQty: 0,\r\n    helpLiftTV: \"\",\r\n    over80InchQty: 0,\r\n    // step2:\r\n    fixedQty: 0,\r\n    tiltQty: 0,\r\n    fullMotionQty: 0,\r\n    ownBracket: false,\r\n    // step3:\r\n    tvBeMounted: false,\r\n    currentTVNeedsDismount: false,\r\n    // step4:\r\n    externalCordConcealmentQty: 0,\r\n    inWallCordConcealmentWithPowerQty: 0,\r\n    installSoundNarQty: 0\r\n  };\r\n\r\n  handleChangeField = (stateKey, value) => {\r\n    this.setState({ [stateKey]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"pt-5\">\r\n          <Row>\r\n            <Col xs={{ span: 10, offset: 1 }}>\r\n              <h5 className=\"py-2\">\r\n                <span className=\"text-primary\">\r\n                  <strong>1</strong>{\" \"}\r\n                  <FontAwesomeIcon icon={faLongArrowAltRight} />\r\n                </span>\r\n                <span className=\"text-muted ml-4\">\r\n                  What tv size did you get?\r\n                </span>\r\n              </h5>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"text-muted text-center\">\r\n                    <small>SIZE</small>\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"text-muted text-right pr-5\">\r\n                    <small>QTY</small>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <FieldSection>\r\n                <Row>\r\n                  <Col>\r\n                    <strong>Under 31</strong>\"\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <QtyCounter\r\n                        value={this.state.sizeUnder31InchQty}\r\n                        stateKey=\"sizeUnder31InchQty\"\r\n                        handleChangeField={this.handleChangeField}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </FieldSection>\r\n              <FieldSection>\r\n                <Row>\r\n                  <Col>\r\n                    <strong>31-60\"</strong>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <QtyCounter\r\n                        value={this.state.size31To60InchQty}\r\n                        stateKey=\"size31To60InchQty\"\r\n                        handleChangeField={this.handleChangeField}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </FieldSection>\r\n              <FieldSection>\r\n                <Row>\r\n                  <Col>\r\n                    <strong>60-80\"</strong>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <QtyCounter\r\n                        value={this.state.size60To80InchQty}\r\n                        stateKey=\"size60To80InchQty\"\r\n                        handleChangeField={this.handleChangeField}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                  <Col>\r\n                    <strong>Will you help lift the TV?</strong>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <Button variant=\"outline-primary\">No</Button>\r\n                      <span className=\"px-2\"></span>\r\n                      <Button variant=\"outline-primary\">Yes</Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </FieldSection>\r\n\r\n              <FieldSection>\r\n                <Row>\r\n                  <Col>\r\n                    <strong>Over 80\"</strong>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                      <QtyCounter\r\n                        value={this.state.over80InchQty}\r\n                        stateKey=\"over80InchQty\"\r\n                        handleChangeField={this.handleChangeField}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </FieldSection>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <NavigationProgress />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport BookingStepForm from \"./components/BookingStepForm/BookingStepForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" component={BookingStepForm} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}